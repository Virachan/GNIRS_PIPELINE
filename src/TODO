
? Change things to the model where 'start' reads the config file and figures out what are the inputs
and then calls a function that does the work?  E.g. noise_spectrum.py ?
This seems a lot cleaner in terms of separating the config file parsing with the operations.

I have started putting a list of the output files that are generated by each routine, and checking if they all
exist to know if the routine can be skipped (if overwrite == False).
I should also define a list of the files that are required (inlist?) for the routine to run, and check that they all
exist before trying to start the routine.  This will catch if something fails in the previous step, or if somebody
tries to run the pipeline out of order.


